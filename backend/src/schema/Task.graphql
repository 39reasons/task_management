type Task {
  id: ID!
  title: String!
  description: String
  due_date: String
  priority: String
  estimate: Int
  status: String!
  stage_id: ID
  backlog_id: ID
  sprint_id: ID
  project_id: ID!
  team_id: ID
  tags: [Tag!]!
  stage: Stage
  sprint: Sprint
  assignee_id: ID
  assignee: User
  position: Int
  created_at: String
  updated_at: String
}

type TaskDraftSuggestion {
  title: String
  description: String
  priority: String
  due_date: String
  tags: [String!]!
  subtasks: [String!]!
}

input TaskDraftInput {
  prompt: String!
  project_id: ID
  stage_id: ID
}

extend type Query {
  tasks(
    team_id: ID
    project_id: ID
    stage_id: ID
    backlog_id: ID
    workflow_id: ID
    sprint_id: ID
  ): [Task!]!
  task(id: ID!): Task
}

extend type Mutation {
  createTask(
    project_id: ID!
    stage_id: ID
    backlog_id: ID
    sprint_id: ID
    title: String!
    description: String
    due_date: String
    priority: String
    estimate: Int
    status: String
  ): Task!

  updateTask(
    id: ID!
    title: String
    description: String
    due_date: String
    priority: String
    stage_id: ID
    backlog_id: ID
    sprint_id: ID
    estimate: Int
    status: String
  ): Task!

  deleteTask(id: ID!): Boolean!

  moveTask(
    task_id: ID!
    to_stage_id: ID!
  ): Task!

  updateTaskPriority(
    id: ID!
    priority: String!
  ): Task!

  reorderTasks(
    stage_id: ID!
    task_ids: [ID!]!
  ): Boolean!

  reorderBacklogTasks(
    project_id: ID!
    backlog_id: ID
    task_ids: [ID!]!
  ): Boolean!

  setTaskAssignee(
    task_id: ID!
    member_id: ID
  ): Task!

  generateTaskDraft(input: TaskDraftInput!): TaskDraftSuggestion!
}
